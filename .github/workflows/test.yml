# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  pull_request:
    paths-ignore:
      - "README.md"
  push:
    paths-ignore:
      - "README.md"
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.2.0
        with:
          submodules: "true"

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: |
          go build -v .
          GOOS=linux GOARCH=386 go build -o terraform_provider_grid_linux_386 main.go
          GOOS=linux GOARCH=amd64 go build -o terraform_provider_grid_linux_amd64 main.go
          GOOS=linux GOARCH=arm go build -o terraform_provider_grid_linux_arm main.go
          GOOS=linux GOARCH=arm64 go build -o terraform_provider_grid_linux_arm64 main.go
          GOOS=windows GOARCH=386 go build -o terraform_provider_grid_windows_386 main.go
          GOOS=windows GOARCH=amd64 go build -o terraform_provider_grid_windows_amd64 main.go
          GOOS=windows GOARCH=arm go build -o terraform_provider_grid_windows_arm main.go
          GOOS=windows GOARCH=arm64 go build -o terraform_provider_grid_windows_arm64 main.go
          GOOS=darwin GOARCH=amd64 go build -o terraform_provider_grid_darwin_amd64 main.go
          GOOS=darwin GOARCH=arm64 go build -o terraform_provider_grid_darwin_arm64 main.go

  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "1.0.8"
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.2.0
        with:
          submodules: "true"

      - name: Get dependencies
        run: |
          go mod download

      - name: TF acceptance tests
        timeout-minutes: 10
        env:
          TF_ACC: "1"
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}

          # Set whatever additional acceptance test env vars here. You can
          # optionally use data from your repository secrets using the
          # following syntax:
          # SOME_VAR: ${{ secrets.SOME_VAR }}

        run: |
          go test -v -cover ./internal/provider/
